Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.
------------------------------------------------------------------------------------
| Tool Version : Vivado v.2017.3 (lin64) Build 2018833 Wed Oct  4 19:58:07 MDT 2017
| Date         : Thu Dec 14 14:30:22 2017
| Host         : centos_sinhnn running 64-bit CentOS Linux release 7.4.1708 (Core)
| Command      : report_drc -file ./nn_core_vc707/post_imp_drc.rpt
| Design       : top_ann
| Device       : xc7vx485tffg1761-2
| Speed File   : -2
| Design State : Routed
------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: top_ann
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 176
+----------+------------------+-----------------------------------------------------+------------+
| Rule     | Severity         | Description                                         | Violations |
+----------+------------------+-----------------------------------------------------+------------+
| NSTD-1   | Critical Warning | Unspecified I/O Standard                            | 1          |
| UCIO-1   | Critical Warning | Unconstrained Logical Port                          | 1          |
| CFGBVS-1 | Warning          | Missing CFGBVS and CONFIG_VOLTAGE Design Properties | 1          |
| DPIP-1   | Warning          | Input pipelining                                    | 104        |
| DPOP-1   | Warning          | PREG Output pipelining                              | 15         |
| DPOP-2   | Warning          | MREG Output pipelining                              | 54         |
+----------+------------------+-----------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
NSTD-1#1 Critical Warning
Unspecified I/O Standard  
101 out of 101 logical ports use I/O standard (IOSTANDARD) value 'DEFAULT', instead of a user assigned specific value. This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all I/O standards. This design will fail to generate a bitstream unless all logical ports have a user specified I/O standard value defined. To allow bitstream creation with unspecified I/O standard values (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks NSTD-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. Problem ports: i_expected[0][5:-10], i_expected[1][5:-10], i_input[0][5:-10], i_input[1][5:-10], o_output_result[0][5:-10], o_output_result[1][5:-10], areset, clk, i_select_initial, i_update_coeff, o_finish_update.
Related violations: <none>

UCIO-1#1 Critical Warning
Unconstrained Logical Port  
101 out of 101 logical ports have no user assigned specific location constraint (LOC). This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all pin locations. This design will fail to generate a bitstream unless all logical ports have a user specified site LOC constraint defined.  To allow bitstream creation with unspecified pin locations (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks UCIO-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run.  Problem ports: i_expected[0][5:-10], i_expected[1][5:-10], i_input[0][5:-10], i_input[1][5:-10], o_output_result[0][5:-10], o_output_result[1][5:-10], areset, clk, i_select_initial, i_update_coeff, o_finish_update.
Related violations: <none>

CFGBVS-1#1 Warning
Missing CFGBVS and CONFIG_VOLTAGE Design Properties  
Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
Related violations: <none>

DPIP-1#1 Warning
Input pipelining  
DSP dut_bw/calc_db_adder_hidden[0].DUT_delta_bias_cumulation/arg input dut_bw/calc_db_adder_hidden[0].DUT_delta_bias_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP dut_bw/calc_db_adder_hidden[1].DUT_delta_bias_cumulation/arg input dut_bw/calc_db_adder_hidden[1].DUT_delta_bias_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP dut_bw/calc_db_adder_hidden[2].DUT_delta_bias_cumulation/arg input dut_bw/calc_db_adder_hidden[2].DUT_delta_bias_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP dut_bw/calc_db_adder_output[0].DUT_delta_bias_cumulation/arg input dut_bw/calc_db_adder_output[0].DUT_delta_bias_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP dut_bw/calc_db_adder_output[1].DUT_delta_bias_cumulation/arg input dut_bw/calc_db_adder_output[1].DUT_delta_bias_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP dut_bw/calc_dw_adder_hidden_i[0].adder_j[0].DUT_delta_weight_cumulation/arg input dut_bw/calc_dw_adder_hidden_i[0].adder_j[0].DUT_delta_weight_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP dut_bw/calc_dw_adder_hidden_i[0].adder_j[1].DUT_delta_weight_cumulation/arg input dut_bw/calc_dw_adder_hidden_i[0].adder_j[1].DUT_delta_weight_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP dut_bw/calc_dw_adder_hidden_i[0].adder_j[2].DUT_delta_weight_cumulation/arg input dut_bw/calc_dw_adder_hidden_i[0].adder_j[2].DUT_delta_weight_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP dut_bw/calc_dw_adder_hidden_i[1].adder_j[0].DUT_delta_weight_cumulation/arg input dut_bw/calc_dw_adder_hidden_i[1].adder_j[0].DUT_delta_weight_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP dut_bw/calc_dw_adder_hidden_i[1].adder_j[1].DUT_delta_weight_cumulation/arg input dut_bw/calc_dw_adder_hidden_i[1].adder_j[1].DUT_delta_weight_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP dut_bw/calc_dw_adder_hidden_i[1].adder_j[2].DUT_delta_weight_cumulation/arg input dut_bw/calc_dw_adder_hidden_i[1].adder_j[2].DUT_delta_weight_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#12 Warning
Input pipelining  
DSP dut_bw/calc_dw_adder_output_i[0].adder_j[0].DUT_delta_weight_cumulation/arg input dut_bw/calc_dw_adder_output_i[0].adder_j[0].DUT_delta_weight_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#13 Warning
Input pipelining  
DSP dut_bw/calc_dw_adder_output_i[0].adder_j[1].DUT_delta_weight_cumulation/arg input dut_bw/calc_dw_adder_output_i[0].adder_j[1].DUT_delta_weight_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#14 Warning
Input pipelining  
DSP dut_bw/calc_dw_adder_output_i[1].adder_j[0].DUT_delta_weight_cumulation/arg input dut_bw/calc_dw_adder_output_i[1].adder_j[0].DUT_delta_weight_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#15 Warning
Input pipelining  
DSP dut_bw/calc_dw_adder_output_i[1].adder_j[1].DUT_delta_weight_cumulation/arg input dut_bw/calc_dw_adder_output_i[1].adder_j[1].DUT_delta_weight_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#16 Warning
Input pipelining  
DSP dut_bw/calc_dw_adder_output_i[2].adder_j[0].DUT_delta_weight_cumulation/arg input dut_bw/calc_dw_adder_output_i[2].adder_j[0].DUT_delta_weight_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#17 Warning
Input pipelining  
DSP dut_bw/calc_dw_adder_output_i[2].adder_j[1].DUT_delta_weight_cumulation/arg input dut_bw/calc_dw_adder_output_i[2].adder_j[1].DUT_delta_weight_cumulation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#18 Warning
Input pipelining  
DSP dut_bw/calc_dw_hidden_i[0].dw_j[0].DUT_delta_weight/arg input dut_bw/calc_dw_hidden_i[0].dw_j[0].DUT_delta_weight/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#19 Warning
Input pipelining  
DSP dut_bw/calc_dw_hidden_i[0].dw_j[0].DUT_delta_weight/arg input dut_bw/calc_dw_hidden_i[0].dw_j[0].DUT_delta_weight/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#20 Warning
Input pipelining  
DSP dut_bw/calc_dw_hidden_i[0].dw_j[1].DUT_delta_weight/arg input dut_bw/calc_dw_hidden_i[0].dw_j[1].DUT_delta_weight/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#21 Warning
Input pipelining  
DSP dut_bw/calc_dw_hidden_i[0].dw_j[1].DUT_delta_weight/arg input dut_bw/calc_dw_hidden_i[0].dw_j[1].DUT_delta_weight/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#22 Warning
Input pipelining  
DSP dut_bw/calc_dw_hidden_i[0].dw_j[2].DUT_delta_weight/arg input dut_bw/calc_dw_hidden_i[0].dw_j[2].DUT_delta_weight/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#23 Warning
Input pipelining  
DSP dut_bw/calc_dw_hidden_i[0].dw_j[2].DUT_delta_weight/arg input dut_bw/calc_dw_hidden_i[0].dw_j[2].DUT_delta_weight/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#24 Warning
Input pipelining  
DSP dut_bw/calc_dw_hidden_i[1].dw_j[0].DUT_delta_weight/arg input dut_bw/calc_dw_hidden_i[1].dw_j[0].DUT_delta_weight/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#25 Warning
Input pipelining  
DSP dut_bw/calc_dw_hidden_i[1].dw_j[0].DUT_delta_weight/arg input dut_bw/calc_dw_hidden_i[1].dw_j[0].DUT_delta_weight/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#26 Warning
Input pipelining  
DSP dut_bw/calc_dw_hidden_i[1].dw_j[1].DUT_delta_weight/arg input dut_bw/calc_dw_hidden_i[1].dw_j[1].DUT_delta_weight/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#27 Warning
Input pipelining  
DSP dut_bw/calc_dw_hidden_i[1].dw_j[1].DUT_delta_weight/arg input dut_bw/calc_dw_hidden_i[1].dw_j[1].DUT_delta_weight/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#28 Warning
Input pipelining  
DSP dut_bw/calc_dw_hidden_i[1].dw_j[2].DUT_delta_weight/arg input dut_bw/calc_dw_hidden_i[1].dw_j[2].DUT_delta_weight/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#29 Warning
Input pipelining  
DSP dut_bw/calc_dw_hidden_i[1].dw_j[2].DUT_delta_weight/arg input dut_bw/calc_dw_hidden_i[1].dw_j[2].DUT_delta_weight/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#30 Warning
Input pipelining  
DSP dut_bw/calc_dw_output_i[0].dw_j[0].DUT_delta_weight/arg input dut_bw/calc_dw_output_i[0].dw_j[0].DUT_delta_weight/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#31 Warning
Input pipelining  
DSP dut_bw/calc_dw_output_i[0].dw_j[0].DUT_delta_weight/arg input dut_bw/calc_dw_output_i[0].dw_j[0].DUT_delta_weight/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#32 Warning
Input pipelining  
DSP dut_bw/calc_dw_output_i[0].dw_j[1].DUT_delta_weight/arg input dut_bw/calc_dw_output_i[0].dw_j[1].DUT_delta_weight/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#33 Warning
Input pipelining  
DSP dut_bw/calc_dw_output_i[0].dw_j[1].DUT_delta_weight/arg input dut_bw/calc_dw_output_i[0].dw_j[1].DUT_delta_weight/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#34 Warning
Input pipelining  
DSP dut_bw/calc_dw_output_i[1].dw_j[0].DUT_delta_weight/arg input dut_bw/calc_dw_output_i[1].dw_j[0].DUT_delta_weight/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#35 Warning
Input pipelining  
DSP dut_bw/calc_dw_output_i[1].dw_j[0].DUT_delta_weight/arg input dut_bw/calc_dw_output_i[1].dw_j[0].DUT_delta_weight/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#36 Warning
Input pipelining  
DSP dut_bw/calc_dw_output_i[1].dw_j[1].DUT_delta_weight/arg input dut_bw/calc_dw_output_i[1].dw_j[1].DUT_delta_weight/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#37 Warning
Input pipelining  
DSP dut_bw/calc_dw_output_i[1].dw_j[1].DUT_delta_weight/arg input dut_bw/calc_dw_output_i[1].dw_j[1].DUT_delta_weight/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#38 Warning
Input pipelining  
DSP dut_bw/calc_dw_output_i[2].dw_j[0].DUT_delta_weight/arg input dut_bw/calc_dw_output_i[2].dw_j[0].DUT_delta_weight/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#39 Warning
Input pipelining  
DSP dut_bw/calc_dw_output_i[2].dw_j[0].DUT_delta_weight/arg input dut_bw/calc_dw_output_i[2].dw_j[0].DUT_delta_weight/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#40 Warning
Input pipelining  
DSP dut_bw/calc_dw_output_i[2].dw_j[1].DUT_delta_weight/arg input dut_bw/calc_dw_output_i[2].dw_j[1].DUT_delta_weight/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#41 Warning
Input pipelining  
DSP dut_bw/calc_dw_output_i[2].dw_j[1].DUT_delta_weight/arg input dut_bw/calc_dw_output_i[2].dw_j[1].DUT_delta_weight/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#42 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg input dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#43 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg input dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#44 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__0 input dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#45 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__0 input dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#46 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__1 input dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#47 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__1 input dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#48 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__2 input dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#49 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__2 input dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#50 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg input dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#51 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg input dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#52 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__0 input dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#53 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__0 input dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#54 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__1 input dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#55 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__1 input dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#56 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__2 input dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#57 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__2 input dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#58 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg input dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#59 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg input dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#60 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__0 input dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#61 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__0 input dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#62 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__1 input dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#63 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__1 input dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#64 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__2 input dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#65 Warning
Input pipelining  
DSP dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__2 input dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#66 Warning
Input pipelining  
DSP dut_bw/calc_layer_output[0].DUT_derivative_activation/arg input dut_bw/calc_layer_output[0].DUT_derivative_activation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#67 Warning
Input pipelining  
DSP dut_bw/calc_layer_output[0].DUT_derivative_activation/arg input dut_bw/calc_layer_output[0].DUT_derivative_activation/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#68 Warning
Input pipelining  
DSP dut_bw/calc_layer_output[0].DUT_error_ouput/arg input dut_bw/calc_layer_output[0].DUT_error_ouput/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#69 Warning
Input pipelining  
DSP dut_bw/calc_layer_output[0].DUT_error_ouput/arg input dut_bw/calc_layer_output[0].DUT_error_ouput/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#70 Warning
Input pipelining  
DSP dut_bw/calc_layer_output[1].DUT_derivative_activation/arg input dut_bw/calc_layer_output[1].DUT_derivative_activation/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#71 Warning
Input pipelining  
DSP dut_bw/calc_layer_output[1].DUT_derivative_activation/arg input dut_bw/calc_layer_output[1].DUT_derivative_activation/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#72 Warning
Input pipelining  
DSP dut_bw/calc_layer_output[1].DUT_error_ouput/arg input dut_bw/calc_layer_output[1].DUT_error_ouput/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#73 Warning
Input pipelining  
DSP dut_bw/calc_layer_output[1].DUT_error_ouput/arg input dut_bw/calc_layer_output[1].DUT_error_ouput/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#74 Warning
Input pipelining  
DSP dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg input dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#75 Warning
Input pipelining  
DSP dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg input dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#76 Warning
Input pipelining  
DSP dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg__0 input dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#77 Warning
Input pipelining  
DSP dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg__0 input dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#78 Warning
Input pipelining  
DSP dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg__0 input dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg__0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#79 Warning
Input pipelining  
DSP dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg input dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#80 Warning
Input pipelining  
DSP dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg input dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#81 Warning
Input pipelining  
DSP dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg__0 input dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#82 Warning
Input pipelining  
DSP dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg__0 input dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#83 Warning
Input pipelining  
DSP dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg__0 input dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg__0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#84 Warning
Input pipelining  
DSP dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg input dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#85 Warning
Input pipelining  
DSP dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg input dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#86 Warning
Input pipelining  
DSP dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg__0 input dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#87 Warning
Input pipelining  
DSP dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg__0 input dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#88 Warning
Input pipelining  
DSP dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg__0 input dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg__0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#89 Warning
Input pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg input dut_fw/calc_output[0].dut_weighted_in_output/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#90 Warning
Input pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg input dut_fw/calc_output[0].dut_weighted_in_output/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#91 Warning
Input pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg__0 input dut_fw/calc_output[0].dut_weighted_in_output/arg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#92 Warning
Input pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg__0 input dut_fw/calc_output[0].dut_weighted_in_output/arg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#93 Warning
Input pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg__0 input dut_fw/calc_output[0].dut_weighted_in_output/arg__0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#94 Warning
Input pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg__1 input dut_fw/calc_output[0].dut_weighted_in_output/arg__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#95 Warning
Input pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg__1 input dut_fw/calc_output[0].dut_weighted_in_output/arg__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#96 Warning
Input pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg__1 input dut_fw/calc_output[0].dut_weighted_in_output/arg__1/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#97 Warning
Input pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg input dut_fw/calc_output[1].dut_weighted_in_output/arg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#98 Warning
Input pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg input dut_fw/calc_output[1].dut_weighted_in_output/arg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#99 Warning
Input pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg__0 input dut_fw/calc_output[1].dut_weighted_in_output/arg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#100 Warning
Input pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg__0 input dut_fw/calc_output[1].dut_weighted_in_output/arg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#101 Warning
Input pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg__0 input dut_fw/calc_output[1].dut_weighted_in_output/arg__0/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#102 Warning
Input pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg__1 input dut_fw/calc_output[1].dut_weighted_in_output/arg__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#103 Warning
Input pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg__1 input dut_fw/calc_output[1].dut_weighted_in_output/arg__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#104 Warning
Input pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg__1 input dut_fw/calc_output[1].dut_weighted_in_output/arg__1/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__0 output dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__0 output dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__0 output dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg output dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg__0 output dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg output dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg__0 output dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg output dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg__0 output dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg output dut_fw/calc_output[0].dut_weighted_in_output/arg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg__0 output dut_fw/calc_output[0].dut_weighted_in_output/arg__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg__1 output dut_fw/calc_output[0].dut_weighted_in_output/arg__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg output dut_fw/calc_output[1].dut_weighted_in_output/arg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg__0 output dut_fw/calc_output[1].dut_weighted_in_output/arg__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#15 Warning
PREG Output pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg__1 output dut_fw/calc_output[1].dut_weighted_in_output/arg__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP dut_bw/calc_db_adder_hidden[0].DUT_delta_bias_cumulation/arg multiplier stage dut_bw/calc_db_adder_hidden[0].DUT_delta_bias_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP dut_bw/calc_db_adder_hidden[1].DUT_delta_bias_cumulation/arg multiplier stage dut_bw/calc_db_adder_hidden[1].DUT_delta_bias_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP dut_bw/calc_db_adder_hidden[2].DUT_delta_bias_cumulation/arg multiplier stage dut_bw/calc_db_adder_hidden[2].DUT_delta_bias_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP dut_bw/calc_db_adder_output[0].DUT_delta_bias_cumulation/arg multiplier stage dut_bw/calc_db_adder_output[0].DUT_delta_bias_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP dut_bw/calc_db_adder_output[1].DUT_delta_bias_cumulation/arg multiplier stage dut_bw/calc_db_adder_output[1].DUT_delta_bias_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_adder_hidden_i[0].adder_j[0].DUT_delta_weight_cumulation/arg multiplier stage dut_bw/calc_dw_adder_hidden_i[0].adder_j[0].DUT_delta_weight_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_adder_hidden_i[0].adder_j[1].DUT_delta_weight_cumulation/arg multiplier stage dut_bw/calc_dw_adder_hidden_i[0].adder_j[1].DUT_delta_weight_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_adder_hidden_i[0].adder_j[2].DUT_delta_weight_cumulation/arg multiplier stage dut_bw/calc_dw_adder_hidden_i[0].adder_j[2].DUT_delta_weight_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_adder_hidden_i[1].adder_j[0].DUT_delta_weight_cumulation/arg multiplier stage dut_bw/calc_dw_adder_hidden_i[1].adder_j[0].DUT_delta_weight_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_adder_hidden_i[1].adder_j[1].DUT_delta_weight_cumulation/arg multiplier stage dut_bw/calc_dw_adder_hidden_i[1].adder_j[1].DUT_delta_weight_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_adder_hidden_i[1].adder_j[2].DUT_delta_weight_cumulation/arg multiplier stage dut_bw/calc_dw_adder_hidden_i[1].adder_j[2].DUT_delta_weight_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_adder_output_i[0].adder_j[0].DUT_delta_weight_cumulation/arg multiplier stage dut_bw/calc_dw_adder_output_i[0].adder_j[0].DUT_delta_weight_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_adder_output_i[0].adder_j[1].DUT_delta_weight_cumulation/arg multiplier stage dut_bw/calc_dw_adder_output_i[0].adder_j[1].DUT_delta_weight_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_adder_output_i[1].adder_j[0].DUT_delta_weight_cumulation/arg multiplier stage dut_bw/calc_dw_adder_output_i[1].adder_j[0].DUT_delta_weight_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_adder_output_i[1].adder_j[1].DUT_delta_weight_cumulation/arg multiplier stage dut_bw/calc_dw_adder_output_i[1].adder_j[1].DUT_delta_weight_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_adder_output_i[2].adder_j[0].DUT_delta_weight_cumulation/arg multiplier stage dut_bw/calc_dw_adder_output_i[2].adder_j[0].DUT_delta_weight_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_adder_output_i[2].adder_j[1].DUT_delta_weight_cumulation/arg multiplier stage dut_bw/calc_dw_adder_output_i[2].adder_j[1].DUT_delta_weight_cumulation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_hidden_i[0].dw_j[0].DUT_delta_weight/arg multiplier stage dut_bw/calc_dw_hidden_i[0].dw_j[0].DUT_delta_weight/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_hidden_i[0].dw_j[1].DUT_delta_weight/arg multiplier stage dut_bw/calc_dw_hidden_i[0].dw_j[1].DUT_delta_weight/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_hidden_i[0].dw_j[2].DUT_delta_weight/arg multiplier stage dut_bw/calc_dw_hidden_i[0].dw_j[2].DUT_delta_weight/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_hidden_i[1].dw_j[0].DUT_delta_weight/arg multiplier stage dut_bw/calc_dw_hidden_i[1].dw_j[0].DUT_delta_weight/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_hidden_i[1].dw_j[1].DUT_delta_weight/arg multiplier stage dut_bw/calc_dw_hidden_i[1].dw_j[1].DUT_delta_weight/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_hidden_i[1].dw_j[2].DUT_delta_weight/arg multiplier stage dut_bw/calc_dw_hidden_i[1].dw_j[2].DUT_delta_weight/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_output_i[0].dw_j[0].DUT_delta_weight/arg multiplier stage dut_bw/calc_dw_output_i[0].dw_j[0].DUT_delta_weight/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_output_i[0].dw_j[1].DUT_delta_weight/arg multiplier stage dut_bw/calc_dw_output_i[0].dw_j[1].DUT_delta_weight/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_output_i[1].dw_j[0].DUT_delta_weight/arg multiplier stage dut_bw/calc_dw_output_i[1].dw_j[0].DUT_delta_weight/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_output_i[1].dw_j[1].DUT_delta_weight/arg multiplier stage dut_bw/calc_dw_output_i[1].dw_j[1].DUT_delta_weight/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#28 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_output_i[2].dw_j[0].DUT_delta_weight/arg multiplier stage dut_bw/calc_dw_output_i[2].dw_j[0].DUT_delta_weight/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#29 Warning
MREG Output pipelining  
DSP dut_bw/calc_dw_output_i[2].dw_j[1].DUT_delta_weight/arg multiplier stage dut_bw/calc_dw_output_i[2].dw_j[1].DUT_delta_weight/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#30 Warning
MREG Output pipelining  
DSP dut_bw/calc_layer_hidden[0].DUT_derivative_activation/arg multiplier stage dut_bw/calc_layer_hidden[0].DUT_derivative_activation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#31 Warning
MREG Output pipelining  
DSP dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__0 multiplier stage dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#32 Warning
MREG Output pipelining  
DSP dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__2 multiplier stage dut_bw/calc_layer_hidden[0].DUT_error_hidden/arg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#33 Warning
MREG Output pipelining  
DSP dut_bw/calc_layer_hidden[1].DUT_derivative_activation/arg multiplier stage dut_bw/calc_layer_hidden[1].DUT_derivative_activation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#34 Warning
MREG Output pipelining  
DSP dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__0 multiplier stage dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#35 Warning
MREG Output pipelining  
DSP dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__2 multiplier stage dut_bw/calc_layer_hidden[1].DUT_error_hidden/arg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#36 Warning
MREG Output pipelining  
DSP dut_bw/calc_layer_hidden[2].DUT_derivative_activation/arg multiplier stage dut_bw/calc_layer_hidden[2].DUT_derivative_activation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#37 Warning
MREG Output pipelining  
DSP dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__0 multiplier stage dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#38 Warning
MREG Output pipelining  
DSP dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__2 multiplier stage dut_bw/calc_layer_hidden[2].DUT_error_hidden/arg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#39 Warning
MREG Output pipelining  
DSP dut_bw/calc_layer_output[0].DUT_derivative_activation/arg multiplier stage dut_bw/calc_layer_output[0].DUT_derivative_activation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#40 Warning
MREG Output pipelining  
DSP dut_bw/calc_layer_output[0].DUT_error_ouput/arg multiplier stage dut_bw/calc_layer_output[0].DUT_error_ouput/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#41 Warning
MREG Output pipelining  
DSP dut_bw/calc_layer_output[1].DUT_derivative_activation/arg multiplier stage dut_bw/calc_layer_output[1].DUT_derivative_activation/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#42 Warning
MREG Output pipelining  
DSP dut_bw/calc_layer_output[1].DUT_error_ouput/arg multiplier stage dut_bw/calc_layer_output[1].DUT_error_ouput/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#43 Warning
MREG Output pipelining  
DSP dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg multiplier stage dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#44 Warning
MREG Output pipelining  
DSP dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg__0 multiplier stage dut_fw/calc_hidden[0].dut_weighted_in_hidden/arg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#45 Warning
MREG Output pipelining  
DSP dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg multiplier stage dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#46 Warning
MREG Output pipelining  
DSP dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg__0 multiplier stage dut_fw/calc_hidden[1].dut_weighted_in_hidden/arg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#47 Warning
MREG Output pipelining  
DSP dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg multiplier stage dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#48 Warning
MREG Output pipelining  
DSP dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg__0 multiplier stage dut_fw/calc_hidden[2].dut_weighted_in_hidden/arg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#49 Warning
MREG Output pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg multiplier stage dut_fw/calc_output[0].dut_weighted_in_output/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#50 Warning
MREG Output pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg__0 multiplier stage dut_fw/calc_output[0].dut_weighted_in_output/arg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#51 Warning
MREG Output pipelining  
DSP dut_fw/calc_output[0].dut_weighted_in_output/arg__1 multiplier stage dut_fw/calc_output[0].dut_weighted_in_output/arg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#52 Warning
MREG Output pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg multiplier stage dut_fw/calc_output[1].dut_weighted_in_output/arg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#53 Warning
MREG Output pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg__0 multiplier stage dut_fw/calc_output[1].dut_weighted_in_output/arg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#54 Warning
MREG Output pipelining  
DSP dut_fw/calc_output[1].dut_weighted_in_output/arg__1 multiplier stage dut_fw/calc_output[1].dut_weighted_in_output/arg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>


