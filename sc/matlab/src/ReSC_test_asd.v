/*
 * This file was generated by the scsynth tool, and is availablefor use under
 * the MIT license. More information can be found at
 * https://github.com/arminalaghi/scsynth/
 */
module ReSC_test_asd(); //a testbench for an ReSC module
	reg [9:0] x_bin; //binary value of input
	reg start;
	wire done;
	wire [9:0] z_bin; //binary value of output
	reg [9:0] expected_z; //expected output

	reg clk;
	reg reset;

	ReSC_wrapper_asd ReSC (
		.x_bin (x_bin),
		.start (start),
		.done (done),
		.z_bin (z_bin),
		.clk (clk),
		.reset (reset)
	);

	always begin
		#1 clk <= ~clk;
	end

	initial begin
		clk = 0;
		reset = 1;
		#5 reset = 0;
		start = 1;

		#10 x_bin = 10'd826;
		expected_z = 10'd933;
		start = 0;

		#2054 x_bin = 10'd480;
		expected_z = 10'd727;
		start = 0;

		#2054 x_bin = 10'd958;
		expected_z = 10'd996;
		start = 0;

		#2054 x_bin = 10'd234;
		expected_z = 10'd533;
		start = 0;

		#2054 x_bin = 10'd812;
		expected_z = 10'd925;
		start = 0;

		#2054 x_bin = 10'd740;
		expected_z = 10'd883;
		start = 0;

		#2054 x_bin = 10'd517;
		expected_z = 10'd749;
		start = 0;

		#2054 x_bin = 10'd802;
		expected_z = 10'd920;
		start = 0;

		#2054 x_bin = 10'd644;
		expected_z = 10'd825;
		start = 0;

		#2054 x_bin = 10'd286;
		expected_z = 10'd585;
		start = 0;

		#2054 x_bin = 10'd743;
		expected_z = 10'd885;
		start = 0;

		#10340 $stop;
	end

	always @(posedge done) begin
		$display("x: %b, z: %b, expected_z: %b", x_bin, z_bin, expected_z);
		start = 1;
	end
endmodule
